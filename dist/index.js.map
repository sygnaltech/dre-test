{
  "version": 3,
  "sources": ["../src/index.ts"],
  "sourcesContent": ["const init = () => {\n    console.log('loaded');\n\n\n    // Find all input elements with the custom attribute 'dre-id' \n    // set the value to the dre-id \n    const inputs: NodeListOf<HTMLInputElement> = document.querySelectorAll('input[dre-id]');\n    inputs.forEach((input: HTMLInputElement) => {\n        const dreIdValue: string | null = input.getAttribute('dre-id');\n        if (dreIdValue) {\n            input.value = dreIdValue;\n        }\n    });\n\n\n\n// Form [dre-form]\n// install submit handler \n\n\n    // Find the form element with the custom attribute 'dre-form'\n    const forms: NodeListOf<HTMLFormElement> | null = document.querySelectorAll('[dre-form] > form');\n    forms.forEach((form: HTMLFormElement) => {\n        console.log(\"installing listener on form\", form); \n        form.addEventListener('submit', (event: Event) => {\n\nconsole.log(\"submitting\"); \n\n            // Prevent default form submission\n            event.preventDefault();\n//event.stopPropagation();\n\n            // Get the action attribute value\n            const action: string = form.getAttribute('action') || '';\nconsole.log(action);\n\n            // Construct the form data as an object\n            const formData: FormData = new FormData(form);\n\n\n\n            let dreId: string[] = [];\n\n            // Find all checkboxes with the custom attribute 'dre-id' within the form\n            const checkboxes: NodeListOf<HTMLInputElement> = form.querySelectorAll('input[type=\"checkbox\"][dre-id]');\n            \n            checkboxes.forEach((checkbox: HTMLInputElement) => {\n                if (checkbox.checked) {\n                    const dreIdValue: string | null = checkbox.getAttribute('dre-id');\n                    if (dreIdValue) {\n                        dreId.push(dreIdValue);\n                    }\n                }\n            });\n            \n            // console.log(dreId); // This will log the array of checked dre-id values\n            // dreId.forEach((value: string) => {\n            //     formData.append('dreId[]', value);\n            // });\n//            formData.append(\"dre_ID\", dreId);\n\n\nvar formDataObject: { [key: string]: any } = {};\nformData.forEach((value, key) => {\n    formDataObject[key] = value;\n});\n\nformDataObject['dre_ID'] = dreId;\n// Add our array\n// formDataObject.append('dre_ID', dreId);\n\n// Log the JSON data\nconsole.log(JSON.stringify(formDataObject));\n\n\n// return; \n\n// Convert formDataObject to JSON and send it via a POST request\nfetch(action, {\n    method: 'POST',\n    headers: {\n        'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(formDataObject)\n})\n//.then(response => response.json())  // assuming server responds with json\n.then(async response => {\n    console.log(\"SERVER RESPONDED\", await response.text()); \n})  // assuming server responds with json\n.then(data => {\n    console.log(data);\n})\n.catch((error) => {\n    console.error('Error:', error);\n});\n\n\n//            return false; \n        });\n    }); \n\n\n\n// capture action\n// prefent default \n\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", init)"],
  "mappings": ";;AAAA,MAAM,OAAO,MAAM;AACf,YAAQ,IAAI,QAAQ;AAKpB,UAAM,SAAuC,SAAS,iBAAiB,eAAe;AACtF,WAAO,QAAQ,CAAC,UAA4B;AACxC,YAAM,aAA4B,MAAM,aAAa,QAAQ;AAC7D,UAAI,YAAY;AACZ,cAAM,QAAQ;AAAA,MAClB;AAAA,IACJ,CAAC;AASD,UAAM,QAA4C,SAAS,iBAAiB,mBAAmB;AAC/F,UAAM,QAAQ,CAAC,SAA0B;AACrC,cAAQ,IAAI,+BAA+B,IAAI;AAC/C,WAAK,iBAAiB,UAAU,CAAC,UAAiB;AAE1D,gBAAQ,IAAI,YAAY;AAGZ,cAAM,eAAe;AAIrB,cAAM,SAAiB,KAAK,aAAa,QAAQ,KAAK;AAClE,gBAAQ,IAAI,MAAM;AAGN,cAAM,WAAqB,IAAI,SAAS,IAAI;AAI5C,YAAI,QAAkB,CAAC;AAGvB,cAAM,aAA2C,KAAK,iBAAiB,gCAAgC;AAEvG,mBAAW,QAAQ,CAAC,aAA+B;AAC/C,cAAI,SAAS,SAAS;AAClB,kBAAM,aAA4B,SAAS,aAAa,QAAQ;AAChE,gBAAI,YAAY;AACZ,oBAAM,KAAK,UAAU;AAAA,YACzB;AAAA,UACJ;AAAA,QACJ,CAAC;AASb,YAAI,iBAAyC,CAAC;AAC9C,iBAAS,QAAQ,CAAC,OAAO,QAAQ;AAC7B,yBAAe,OAAO;AAAA,QAC1B,CAAC;AAED,uBAAe,YAAY;AAK3B,gBAAQ,IAAI,KAAK,UAAU,cAAc,CAAC;AAM1C,cAAM,QAAQ;AAAA,UACV,QAAQ;AAAA,UACR,SAAS;AAAA,YACL,gBAAgB;AAAA,UACpB;AAAA,UACA,MAAM,KAAK,UAAU,cAAc;AAAA,QACvC,CAAC,EAEA,KAAK,OAAM,aAAY;AACpB,kBAAQ,IAAI,oBAAoB,MAAM,SAAS,KAAK,CAAC;AAAA,QACzD,CAAC,EACA,KAAK,UAAQ;AACV,kBAAQ,IAAI,IAAI;AAAA,QACpB,CAAC,EACA,MAAM,CAAC,UAAU;AACd,kBAAQ,MAAM,UAAU,KAAK;AAAA,QACjC,CAAC;AAAA,MAIO,CAAC;AAAA,IACL,CAAC;AAAA,EAOL;AAEA,WAAS,iBAAiB,oBAAoB,IAAI;",
  "names": []
}
